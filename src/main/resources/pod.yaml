apiVersion: v1
kind: Pod
metadata:
  annotations:
    key: value
  clusterName: cluster
  name: pod
  namespace: default
  labels:
    key: value
spec:
  affinity: {} # TODO
  containers:
    - args:
        - -x
        - 87
        - /
        - *
      command:
        - other
        - array
      env:
        - name: name1
          value: explicit
        - name: name2
          valueFrom:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
      envFrom:
        - configMapRef:
            - name: configmap
              optional: false
          prefix: prefix
        - secretRef:
            - name: secret
              optional: true
      image: nginx
      imagePullPolicy: Always
      livenessProbe:
        {} # TODO
      name: container
      ports:
        - containerPort: 80
          hostIP: host
          hostPort: 80
          name: web
          protocol: TCP
      readinessProbe:
        {} # TODO
      resources:
        {} # TODO
      securityContext:
        {} # TODO
      stdin: false
      stdinOnce: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      tty: false
      volumeMounts:
        - {} # TODO
      workingDir: /home/test/
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostAliases: []
  hostIPC: false
  hostname: host
  imagePullSecrets:
    - {} # TODO
  initContainers:
    - name: initContainer
      # TODO
  nodeName: node
  nodeSelector:
    key: value
  preemptionPolicy: PreemptLowerPriority
  priority: 1
  priorityClassName: system-node-critical
  readinessGates:
    - {} # TODO
  restartPolicy: Always
  schedulerName: custom
  securityContext:
    {} # TODO
  serviceAccountName: serviceAccount
  shareProcessNamespace: false
  subdomain: custom
  tolerations:
    - # TODO
  volumes:
    - # TODO
